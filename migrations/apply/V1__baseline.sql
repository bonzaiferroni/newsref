CREATE TABLE IF NOT EXISTS "user" (id BIGSERIAL PRIMARY KEY, "name" TEXT NULL, username TEXT NOT NULL, hashed_password TEXT NOT NULL, salt TEXT NOT NULL, email TEXT NULL, roles TEXT[] NOT NULL, avatar_url TEXT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS refresh_token (id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL, token TEXT NOT NULL, created_at BIGINT NOT NULL, ttl INT NOT NULL, issuer TEXT NOT NULL, CONSTRAINT fk_refresh_token_user_id__id FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS nexus (id SERIAL PRIMARY KEY, "name" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS host (id SERIAL PRIMARY KEY, nexus_id INT NULL, core TEXT NOT NULL, "name" TEXT NULL, logo TEXT NULL, robots_txt TEXT NULL, is_redirect BOOLEAN NULL, score INT DEFAULT 0 NOT NULL, banned_paths TEXT[] NOT NULL, domains TEXT[] NOT NULL, junk_params TEXT[] NOT NULL, nav_params TEXT[] NOT NULL, CONSTRAINT fk_host_nexus_id__id FOREIGN KEY (nexus_id) REFERENCES nexus(id) ON DELETE SET NULL ON UPDATE RESTRICT);
CREATE INDEX host_nexus_id ON host (nexus_id);
ALTER TABLE host ADD CONSTRAINT host_core_unique UNIQUE (core);
CREATE TABLE IF NOT EXISTS "location" (id SERIAL PRIMARY KEY, "name" TEXT NOT NULL, geo_point POINT NOT NULL, north_east POINT NOT NULL, south_west POINT NOT NULL);
ALTER TABLE "location" ADD CONSTRAINT location_name_unique UNIQUE ("name");
CREATE TABLE IF NOT EXISTS story (id BIGSERIAL PRIMARY KEY, title TEXT NULL, "size" INT NOT NULL, score INT NOT NULL, coherence REAL NOT NULL, happened_at TIMESTAMP NOT NULL, vector vector(768) NOT NULL);
CREATE TABLE IF NOT EXISTS chapter (id BIGSERIAL PRIMARY KEY, story_id BIGINT NULL, parent_id BIGINT NULL, title TEXT NULL, title_huddle_id BIGINT NULL, summary TEXT NULL, score INT NOT NULL, "size" INT NOT NULL, cohesion REAL NOT NULL, story_distance REAL NULL, created_at TIMESTAMP NOT NULL, happened_at TIMESTAMP NOT NULL, vector vector(768) NOT NULL);
CREATE INDEX chapter_story_id ON chapter (story_id);
CREATE INDEX chapter_parent_id ON chapter (parent_id);
CREATE INDEX chapter_created_at ON chapter (created_at);
CREATE INDEX chapter_happened_at ON chapter (happened_at);
CREATE TABLE IF NOT EXISTS huddle (id BIGSERIAL PRIMARY KEY, chapter_id BIGINT NULL, page_id BIGINT NULL, target_id BIGINT NULL, initiator_id BIGINT NOT NULL, huddle_type INT NOT NULL, guide TEXT NOT NULL, "options" JSONB NOT NULL, consensus TEXT NULL, status INT NOT NULL, started_at TIMESTAMP NOT NULL, finished_at TIMESTAMP NOT NULL, recorded_at TIMESTAMP NULL);
CREATE INDEX huddle_chapter_id ON huddle (chapter_id);
CREATE INDEX huddle_page_id ON huddle (page_id);
CREATE INDEX huddle_target_id ON huddle (target_id);
CREATE INDEX huddle_initiator_id ON huddle (initiator_id);
CREATE TABLE IF NOT EXISTS page (id BIGSERIAL PRIMARY KEY, host_id INT NOT NULL, location_id INT NULL, url TEXT NOT NULL, title TEXT NULL, content_type INT NULL, score INT NULL, feed_position INT NULL, image_url TEXT NULL, thumbnail TEXT NULL, embed TEXT NULL, cached_word_count INT NULL, ok_response BOOLEAN DEFAULT FALSE NOT NULL, headline TEXT NULL, alternative_headline TEXT NULL, description TEXT NULL, cannon_url TEXT NULL, meta_section TEXT NULL, keywords TEXT[] NULL, word_count INT NULL, is_free BOOLEAN NULL, "language" TEXT NULL, comment_count INT NULL, article_type_huddle_id BIGINT NULL, summary TEXT NULL, document_type INT NULL, "section" INT NULL, news_type INT DEFAULT 0 NOT NULL, seen_at TIMESTAMP NOT NULL, accessed_at TIMESTAMP NULL, published_at TIMESTAMP NULL, modified_at TIMESTAMP NULL);
CREATE INDEX page_host_id ON page (host_id);
CREATE INDEX page_location_id ON page (location_id);
ALTER TABLE page ADD CONSTRAINT page_url_unique UNIQUE (url);
CREATE INDEX page_seen_at ON page (seen_at);
CREATE INDEX page_published_at ON page (published_at);
CREATE TABLE IF NOT EXISTS feed (id SERIAL PRIMARY KEY, url TEXT NOT NULL, selector TEXT NULL, "external" BOOLEAN DEFAULT FALSE NOT NULL, track_position BOOLEAN DEFAULT FALSE NOT NULL, link_count INT DEFAULT 0 NOT NULL, debug BOOLEAN DEFAULT FALSE NOT NULL, disabled BOOLEAN DEFAULT FALSE NOT NULL, note TEXT DEFAULT '' NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, check_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS page_score (id BIGSERIAL PRIMARY KEY, page_id BIGINT NOT NULL, origin_id BIGINT NULL, feed_id INT NULL, score INT NOT NULL, scored_at TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS lead (id BIGSERIAL PRIMARY KEY, url TEXT NOT NULL, host_id INT NOT NULL, page_id BIGINT NULL);
ALTER TABLE lead ADD CONSTRAINT lead_url_unique UNIQUE (url);
CREATE INDEX lead_host_id ON lead (host_id);
CREATE INDEX lead_page_id ON lead (page_id);
CREATE TABLE IF NOT EXISTS "content" (id BIGSERIAL PRIMARY KEY, "text" TEXT NOT NULL);
ALTER TABLE "content" ADD CONSTRAINT content_text_unique UNIQUE ("text");
CREATE TABLE IF NOT EXISTS link (id BIGSERIAL PRIMARY KEY, page_id BIGINT NOT NULL, lead_id BIGINT NULL, content_id BIGINT NULL, url TEXT NOT NULL, url_text TEXT NOT NULL, text_index INT DEFAULT -1 NOT NULL, is_external BOOLEAN NOT NULL);
CREATE INDEX link_page_id ON link (page_id);
CREATE INDEX link_lead_id ON link (lead_id);
CREATE INDEX link_content_id ON link (content_id);
CREATE TABLE IF NOT EXISTS lead_job (id BIGSERIAL PRIMARY KEY, feed_id INT NULL, lead_id BIGINT NOT NULL, headline TEXT NULL, is_external BOOLEAN NOT NULL, fresh_at TIMESTAMP NULL, feed_position INT NULL);
CREATE INDEX lead_job_lead_id ON lead_job (lead_id);
CREATE INDEX lead_job_fresh_at ON lead_job (fresh_at);
CREATE TABLE IF NOT EXISTS lead_result (id BIGSERIAL PRIMARY KEY, lead_id BIGINT NOT NULL, "result" INT NOT NULL, strategy INT NULL, attempted_at TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS page_content (id BIGSERIAL PRIMARY KEY, page_id BIGINT NOT NULL, content_id BIGINT NOT NULL);
CREATE INDEX page_content_page_id ON page_content (page_id);
CREATE INDEX page_content_content_id ON page_content (content_id);
CREATE TABLE IF NOT EXISTS author (id SERIAL PRIMARY KEY, "name" TEXT NOT NULL, url TEXT NULL, bylines TEXT[] NOT NULL);
CREATE INDEX author_name ON author ("name");
CREATE INDEX author_bylines ON author (bylines);
CREATE TABLE IF NOT EXISTS host_author (host_id INT, author_id INT, CONSTRAINT pk_host_author PRIMARY KEY (host_id, author_id), CONSTRAINT fk_host_author_host_id__id FOREIGN KEY (host_id) REFERENCES host(id) ON DELETE CASCADE ON UPDATE RESTRICT, CONSTRAINT fk_host_author_author_id__id FOREIGN KEY (author_id) REFERENCES author(id) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE INDEX host_author_host_id ON host_author (host_id);
CREATE INDEX host_author_author_id ON host_author (author_id);
CREATE TABLE IF NOT EXISTS page_author (page_id BIGINT, author_id INT, CONSTRAINT pk_page_author PRIMARY KEY (page_id, author_id));
CREATE INDEX page_author_page_id ON page_author (page_id);
CREATE INDEX page_author_author_id ON page_author (author_id);
CREATE TABLE IF NOT EXISTS scoop (id BIGSERIAL PRIMARY KEY, uri TEXT NOT NULL, html TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS page_cache (id SERIAL PRIMARY KEY, page_id BIGINT NOT NULL, score INT NOT NULL, created_at TIMESTAMP NOT NULL, "source" JSON NOT NULL);
CREATE TABLE IF NOT EXISTS note (id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL, subject TEXT NOT NULL, body TEXT NOT NULL, created_at TIMESTAMP NOT NULL, modified_at TIMESTAMP NOT NULL, CONSTRAINT fk_note_user_id__id FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE SET NULL ON UPDATE RESTRICT);
CREATE INDEX note_user_id ON note (user_id);
CREATE INDEX note_created_at ON note (created_at);
CREATE INDEX note_modified_at ON note (modified_at);
CREATE TABLE IF NOT EXISTS page_note (id BIGSERIAL PRIMARY KEY, page_id BIGINT NOT NULL, note_id BIGINT NOT NULL);
CREATE INDEX page_note_page_id ON page_note (page_id);
CREATE INDEX page_note_note_id ON page_note (note_id);
CREATE TABLE IF NOT EXISTS embedding_family (id SERIAL PRIMARY KEY, model TEXT NOT NULL, description TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS embedding (id BIGSERIAL PRIMARY KEY, page_id BIGINT NOT NULL, family_id INT NOT NULL, vector vector(768) NOT NULL);
CREATE TABLE IF NOT EXISTS chapter_page (id BIGSERIAL PRIMARY KEY, chapter_id BIGINT NOT NULL, page_id BIGINT NOT NULL, relevance_huddle_id BIGINT NULL, "type" INT NOT NULL, distance REAL NULL, text_distance REAL NULL, time_distance REAL NULL, link_distance REAL NULL, relevance INT NULL);
CREATE INDEX chapter_page_chapter_id ON chapter_page (chapter_id);
CREATE INDEX chapter_page_page_id ON chapter_page (page_id);
CREATE INDEX chapter_page_relevance_huddle_id ON chapter_page (relevance_huddle_id);
ALTER TABLE chapter_page ADD CONSTRAINT chapter_page_chapter_id_page_id_unique UNIQUE (chapter_id, page_id);
CREATE TABLE IF NOT EXISTS chapter_exclusion (id BIGSERIAL PRIMARY KEY, chapter_id BIGINT NOT NULL, page_id BIGINT NOT NULL);
CREATE INDEX chapter_exclusion_chapter_id ON chapter_exclusion (chapter_id);
CREATE INDEX chapter_exclusion_page_id ON chapter_exclusion (page_id);
ALTER TABLE chapter_exclusion ADD CONSTRAINT chapter_exclusion_chapter_id_page_id_unique UNIQUE (chapter_id, page_id);
CREATE TABLE IF NOT EXISTS feed_page (id BIGSERIAL PRIMARY KEY, feed_id INT NOT NULL, page_id BIGINT NOT NULL, "position" INT NOT NULL);
CREATE TABLE IF NOT EXISTS variable (id SERIAL PRIMARY KEY, "name" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS integer_log (id BIGSERIAL PRIMARY KEY, variable_id INT NOT NULL, "value" INT NOT NULL, "time" BIGINT NOT NULL, CONSTRAINT fk_integer_log_variable_id__id FOREIGN KEY (variable_id) REFERENCES variable(id) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS json_log (id BIGSERIAL PRIMARY KEY, variable_id INT NOT NULL, "json" TEXT NOT NULL, "time" BIGINT NOT NULL, CONSTRAINT fk_json_log_variable_id__id FOREIGN KEY (variable_id) REFERENCES variable(id) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS person (id SERIAL PRIMARY KEY, "name" TEXT NOT NULL, identifiers TEXT[] NOT NULL);
CREATE TABLE IF NOT EXISTS page_person (page_id BIGINT, person_id INT, CONSTRAINT pk_page_person PRIMARY KEY (page_id, person_id));
CREATE INDEX page_person_page_id ON page_person (page_id);
CREATE INDEX page_person_person_id ON page_person (person_id);
CREATE TABLE IF NOT EXISTS "comment" (id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL, "text" TEXT NOT NULL, "time" TIMESTAMP NOT NULL, CONSTRAINT fk_comment_user_id__id FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS huddle_comment (id BIGSERIAL PRIMARY KEY, huddle_id BIGINT NOT NULL, comment_id BIGINT NOT NULL);
CREATE INDEX huddle_comment_huddle_id ON huddle_comment (huddle_id);
CREATE INDEX huddle_comment_comment_id ON huddle_comment (comment_id);
CREATE TABLE IF NOT EXISTS huddle_response (id BIGSERIAL PRIMARY KEY, huddle_id BIGINT NOT NULL, user_id BIGINT NOT NULL, comment_id BIGINT NULL, response TEXT NOT NULL, datetime TIMESTAMP NOT NULL);
CREATE INDEX huddle_response_huddle_id ON huddle_response (huddle_id);
CREATE INDEX huddle_response_user_id ON huddle_response (user_id);
CREATE INDEX huddle_response_comment_id ON huddle_response (comment_id);
CREATE TABLE IF NOT EXISTS log (id BIGSERIAL PRIMARY KEY, page_id BIGINT NULL, origin TEXT NOT NULL, subject TEXT NOT NULL, message TEXT NOT NULL, "time" TIMESTAMP NOT NULL);
CREATE INDEX log_page_id ON log (page_id);
CREATE INDEX log_time ON log ("time");
ALTER TABLE chapter ADD CONSTRAINT fk_chapter_story_id__id FOREIGN KEY (story_id) REFERENCES story(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE chapter ADD CONSTRAINT fk_chapter_parent_id__id FOREIGN KEY (parent_id) REFERENCES chapter(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE chapter ADD CONSTRAINT fk_chapter_title_huddle_id__id FOREIGN KEY (title_huddle_id) REFERENCES huddle(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE huddle ADD CONSTRAINT fk_huddle_chapter_id__id FOREIGN KEY (chapter_id) REFERENCES chapter(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE huddle ADD CONSTRAINT fk_huddle_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE huddle ADD CONSTRAINT fk_huddle_target_id__id FOREIGN KEY (target_id) REFERENCES huddle(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE huddle ADD CONSTRAINT fk_huddle_initiator_id__id FOREIGN KEY (initiator_id) REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page ADD CONSTRAINT fk_page_host_id__id FOREIGN KEY (host_id) REFERENCES host(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page ADD CONSTRAINT fk_page_location_id__id FOREIGN KEY (location_id) REFERENCES "location"(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page ADD CONSTRAINT fk_page_article_type_huddle_id__id FOREIGN KEY (article_type_huddle_id) REFERENCES huddle(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE page_score ADD CONSTRAINT fk_page_score_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page_score ADD CONSTRAINT fk_page_score_origin_id__id FOREIGN KEY (origin_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page_score ADD CONSTRAINT fk_page_score_feed_id__id FOREIGN KEY (feed_id) REFERENCES feed(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE lead ADD CONSTRAINT fk_lead_host_id__id FOREIGN KEY (host_id) REFERENCES host(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE lead ADD CONSTRAINT fk_lead_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE link ADD CONSTRAINT fk_link_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE link ADD CONSTRAINT fk_link_lead_id__id FOREIGN KEY (lead_id) REFERENCES lead(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE link ADD CONSTRAINT fk_link_content_id__id FOREIGN KEY (content_id) REFERENCES "content"(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE lead_job ADD CONSTRAINT fk_lead_job_feed_id__id FOREIGN KEY (feed_id) REFERENCES feed(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE lead_job ADD CONSTRAINT fk_lead_job_lead_id__id FOREIGN KEY (lead_id) REFERENCES lead(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE lead_result ADD CONSTRAINT fk_lead_result_lead_id__id FOREIGN KEY (lead_id) REFERENCES lead(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE page_content ADD CONSTRAINT fk_page_content_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page_content ADD CONSTRAINT fk_page_content_content_id__id FOREIGN KEY (content_id) REFERENCES "content"(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page_author ADD CONSTRAINT fk_page_author_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page_author ADD CONSTRAINT fk_page_author_author_id__id FOREIGN KEY (author_id) REFERENCES author(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page_cache ADD CONSTRAINT fk_page_cache_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page_note ADD CONSTRAINT fk_page_note_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page_note ADD CONSTRAINT fk_page_note_note_id__id FOREIGN KEY (note_id) REFERENCES note(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE embedding ADD CONSTRAINT fk_embedding_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE embedding ADD CONSTRAINT fk_embedding_family_id__id FOREIGN KEY (family_id) REFERENCES embedding_family(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE chapter_page ADD CONSTRAINT fk_chapter_page_chapter_id__id FOREIGN KEY (chapter_id) REFERENCES chapter(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE chapter_page ADD CONSTRAINT fk_chapter_page_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE chapter_page ADD CONSTRAINT fk_chapter_page_relevance_huddle_id__id FOREIGN KEY (relevance_huddle_id) REFERENCES huddle(id) ON DELETE SET NULL ON UPDATE RESTRICT;
ALTER TABLE chapter_exclusion ADD CONSTRAINT fk_chapter_exclusion_chapter_id__id FOREIGN KEY (chapter_id) REFERENCES chapter(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE chapter_exclusion ADD CONSTRAINT fk_chapter_exclusion_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE feed_page ADD CONSTRAINT fk_feed_page_feed_id__id FOREIGN KEY (feed_id) REFERENCES feed(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE feed_page ADD CONSTRAINT fk_feed_page_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page_person ADD CONSTRAINT fk_page_person_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE page_person ADD CONSTRAINT fk_page_person_person_id__id FOREIGN KEY (person_id) REFERENCES person(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE huddle_comment ADD CONSTRAINT fk_huddle_comment_huddle_id__id FOREIGN KEY (huddle_id) REFERENCES huddle(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE huddle_comment ADD CONSTRAINT fk_huddle_comment_comment_id__id FOREIGN KEY (comment_id) REFERENCES "comment"(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE huddle_response ADD CONSTRAINT fk_huddle_response_huddle_id__id FOREIGN KEY (huddle_id) REFERENCES huddle(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE huddle_response ADD CONSTRAINT fk_huddle_response_user_id__id FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE huddle_response ADD CONSTRAINT fk_huddle_response_comment_id__id FOREIGN KEY (comment_id) REFERENCES "comment"(id) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE log ADD CONSTRAINT fk_log_page_id__id FOREIGN KEY (page_id) REFERENCES page(id) ON DELETE CASCADE ON UPDATE RESTRICT;
CREATE SEQUENCE IF NOT EXISTS user_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS refresh_token_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS page_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS page_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS page_score_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS link_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS host_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS lead_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS lead_job_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS lead_result_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS page_content_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS content_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS author_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS scoop_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS feed_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS nexus_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS page_cache_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS note_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS page_note_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS embedding_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS embedding_family_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS story_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS chapter_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS chapter_page_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS chapter_exclusion_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS feed_page_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS variable_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS integer_log_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS json_log_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS location_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS person_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS huddle_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS huddle_comment_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS huddle_response_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS comment_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS log_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
